import static globals.Globals.*

import static gregtech.api.unification.material.Materials.*;
import gregtech.api.unification.material.MarkerMaterials;
import static gregtech.api.unification.ore.OrePrefix.dye;

FLUID_DECOMPRESSOR = recipemap('fluid_decompressor')
FLUID_COMPRESSOR = recipemap('fluid_compressor')

FBR = recipemap('fixed_bed_reactor')
BCR = recipemap('bubble_column_reactor')
BR = recipemap('batch_reactor')
POLYMERIZATION = recipemap('polymerization_tank')
FLUIDIZEDBR = recipemap('fluidized_bed_reactor')
DISTILLATION_TOWER = recipemap('distillation_tower')
DISTILLERY = recipemap('distillery')
ROASTER = recipemap('roaster')
MIXER = recipemap('mixer')
DRYER = recipemap('dryer')
SIFTER = recipemap('sifter')
CENTRIFUGE = recipemap('centrifuge')
PYROLYSE = recipemap('pyrolyse_oven')
LCR = recipemap('large_chemical_reactor')
EBF = recipemap('electric_blast_furnace')
VULCANIZER = recipemap('vulcanizing_press')
ALLOY_SMELTER = recipemap('alloy_smelter')
ARC_FURNACE = recipemap('arc_furnace')
AUTOCLAVE = recipemap('autoclave')
COMPRESSOR = recipemap('compressor')
ASSEMBLER = recipemap('assembler')
ELECTROLYZER = recipemap('electrolyzer')
ELECTROLYTIC_CELL = recipemap('electrolytic_cell')
REACTION_FURNACE = recipemap('reaction_furnace')
ELECTROMAGNETIC_SEPARATOR = recipemap('electromagnetic_separator')
SMOKE_STACK = recipemap('smoke_stack')
VACUUM_CHAMBER = recipemap('vacuum_chamber')
EXTRACTOR = recipemap('extractor')
HEAT_EXCHANGER = recipemap('heat_exchanger')
CRYOGENIC_DISTILLATION = recipemap('cryogenic_distillation')
CONDENSER = recipemap('condenser')

FLUID_COMPRESSOR.recipeBuilder()
        .fluidInputs(fluid('air') * 12800)
        .fluidOutputs(fluid('compressed_air') * 200)
        .duration(8)
        .EUt(160)
        .buildAndRegister()

CENTRIFUGE.recipeBuilder()
        .fluidInputs(fluid('purified_waste_gaseous_nitrogen') * 100)
        .fluidInputs(fluid('water') * 1000)
        .fluidOutputs(fluid('cold_water') * 750)
        .duration(120)
        .EUt(160)
        .buildAndRegister()

CENTRIFUGE.recipeBuilder()
        .fluidInputs(fluid('compressed_air') * 1000)
        .fluidInputs(fluid('cold_water') * 250)
        .fluidOutputs(fluid('chilled_air') * 1000)
        .fluidOutputs(fluid('water') * 250)
        .duration(40)
        .EUt(160)
        .buildAndRegister()

COMPRESSOR.recipeBuilder()
        .fluidInputs(fluid('chilled_air') * 1000)
        .fluidOutputs(fluid('purified_air') * 1000)
        .inputs(metaitem('dustMolecularSieve'))
        .outputs(metaitem('dustDirtyMolecularSieve'))
        .duration(40)
        .EUt(160)
        .buildAndRegister()

COMPRESSOR.recipeBuilder()
        .fluidInputs(fluid('waste_gaseous_nitrogen') * 1000)
        .fluidOutputs(fluid('purified_waste_gaseous_nitrogen') * 1000)
        .inputs(metaitem('dustMolecularSieve'))
        .outputs(metaitem('dustDirtyMolecularSieve'))
        .duration(40)
        .EUt(160)
        .buildAndRegister()

VACUUM_CHAMBER.recipeBuilder()
        .fluidOutputs(fluid('carbon_dioxide') * 50)
        .inputs(metaitem('dustDirtyMolecularSieve'))
        .outputs(metaitem('dustMolecularSieve'))
        .duration(40)
        .EUt(160)
        .buildAndRegister()

FLUID_COMPRESSOR.recipeBuilder()
        .fluidInputs(fluid('purified_air') * 1000)
        .fluidOutputs(fluid('boosted_air') * 300)
        .duration(40)
        .EUt(160)
        .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
        .fluidInputs(fluid('boosted_air') * 300)
        .fluidInputs(fluid('purified_air') * 500)
        .fluidOutputs(fluid('partially_liquified_air') * 150)
        .fluidOutputs(fluid('gaseous_air_feedstock') * 500)
        .duration(80)
        .buildAndRegister()

CENTRIFUGE.recipeBuilder()
        .fluidInputs(fluid('partially_liquified_air') * 150)
        .fluidOutputs(fluid('gaseous_air_feedstock') * 100)
        .fluidOutputs(fluid('liquid_air_feedstock') * 50)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

CRYOGENIC_DISTILLATION.recipeBuilder()
        .circuitMeta(2)
        .fluidInputs(fluid('untreated_liquid_nitrogen') * 75)
        .fluidInputs(fluid('liquid_air_feedstock') * 50)
        .fluidInputs(fluid('gaseous_air_feedstock') * 1100)
        .fluidOutputs(fluid('oxygen_rich_liquid') * 400)
        .fluidOutputs(fluid('oxygen_rich_gas') * 150)
        .fluidOutputs(fluid('nitrogen_rich_gas') * 2000)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

CRYOGENIC_DISTILLATION.recipeBuilder()
        .circuitMeta(1)
        .fluidInputs(fluid('liquid_air_feedstock') * 50)
        .fluidInputs(fluid('gaseous_air_feedstock') * 1100)
        .fluidOutputs(fluid('oxygen_rich_liquid') * 400)
        .fluidOutputs(fluid('oxygen_rich_gas') * 150)
        .fluidOutputs(fluid('nitrogen_rich_gas') * 2000)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

FLUID_DECOMPRESSOR.recipeBuilder()
        .fluidInputs(fluid('oxygen_rich_liquid') * 400)
        .fluidOutputs(fluid('oxygen_rich_gas') * 800)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

FLUID_DECOMPRESSOR.recipeBuilder()
        .fluidInputs(fluid('nitrogen_rich_gas') * 300)
        .fluidOutputs(fluid('cold_gaseous_nitrogen') * 500)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

CRYOGENIC_DISTILLATION.recipeBuilder()
        .circuitMeta(2)
        .fluidInputs(fluid('subcooled_liquid_nitrogen') * 50)
        .fluidInputs(fluid('oxygen_rich_gas') * 1000)
        .fluidInputs(fluid('nitrogen_rich_gas') * 1400)
        .fluidInputs(fluid('cold_gaseous_nitrogen') * 1000)
        .fluidOutputs(fluid('untreated_liquid_nitrogen') * 175)
        .fluidOutputs(fluid('untreated_liquid_oxygen') * 200)
        .fluidOutputs(fluid('argon_rich_gas') * 80)
        .fluidOutputs(fluid('cold_waste_gaseous_nitrogen') * 100)
        .fluidOutputs(fluid('liquid_nitrogen') * 100)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

CRYOGENIC_DISTILLATION.recipeBuilder()
        .circuitMeta(1)
        .fluidInputs(fluid('oxygen_rich_gas') * 1000)
        .fluidInputs(fluid('nitrogen_rich_gas') * 1400)
        .fluidInputs(fluid('cold_gaseous_nitrogen') * 1000)
        .fluidOutputs(fluid('untreated_liquid_nitrogen') * 175)
        .fluidOutputs(fluid('untreated_liquid_oxygen') * 200)
        .fluidOutputs(fluid('argon_rich_gas') * 80)
        .fluidOutputs(fluid('cold_waste_gaseous_nitrogen') * 100)
        .fluidOutputs(fluid('liquid_nitrogen') * 50)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

SMOKE_STACK.recipeBuilder()
        .fluidInputs(fluid('argon_rich_gas') * 100)
        .duration(20)
        .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
        .fluidInputs(fluid('purified_air') * 500)
        .fluidInputs(fluid('untreated_liquid_oxygen') * 50)
        .fluidOutputs(fluid('gaseous_air_feedstock') * 500)
        .fluidOutputs(fluid('oxygen') * 50)
        .duration(80)
        .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
        .fluidInputs(fluid('untreated_liquid_oxygen') * 50)
        .fluidInputs(fluid('chilly_waste_gaseous_nitrogen') * 100)
        .fluidOutputs(fluid('oxygen') * 50)
        .fluidOutputs(fluid('waste_gaseous_nitrogen') * 100)
        .duration(80)
        .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
        .fluidInputs(fluid('chilly_waste_gaseous_nitrogen') * 100)
        .fluidInputs(fluid('untreated_liquid_nitrogen') * 50)
        .fluidOutputs(fluid('waste_gaseous_nitrogen') * 100)
        .fluidOutputs(fluid('nitrogen') * 50)
        .duration(80)
        .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
        .fluidInputs(fluid('cold_waste_gaseous_nitrogen') * 100)
        .fluidInputs(fluid('untreated_liquid_nitrogen') * 25)
        .fluidOutputs(fluid('chilly_waste_gaseous_nitrogen') * 200)
        .fluidOutputs(fluid('subcooled_liquid_nitrogen') * 25)
        .duration(80)
        .buildAndRegister()

HEAT_EXCHANGER.recipeBuilder()
        .fluidInputs(fluid('untreated_liquid_nitrogen') * 25)
        .fluidInputs(fluid('untreated_liquid_oxygen') * 100)
        .fluidOutputs(fluid('subcooled_liquid_nitrogen') * 25)
        .fluidOutputs(fluid('liquid_oxygen') * 100)
        .duration(80)
        .buildAndRegister()

CRYOGENIC_DISTILLATION.recipeBuilder()
        .circuitMeta(2)
        .fluidInputs(fluid('argon_rich_gas') * 100)
        .fluidInputs(fluid('liquid_crude_argon') * 10)
        .fluidOutputs(fluid('oxygen_rich_gas') * 50)
        .fluidOutputs(fluid('crude_argon_vapor') * 50)
        .fluidOutputs(fluid('cold_waste_gaseous_nitrogen') * 100)
        .fluidOutputs(fluid('liquid_nitrogen') * 50)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

CRYOGENIC_DISTILLATION.recipeBuilder()
        .circuitMeta(1)
        .fluidInputs(fluid('argon_rich_gas') * 100)
        .fluidOutputs(fluid('oxygen_rich_gas') * 50)
        .fluidOutputs(fluid('crude_argon_vapor') * 40)
        .fluidOutputs(fluid('cold_waste_gaseous_nitrogen') * 100)
        .fluidOutputs(fluid('liquid_nitrogen') * 50)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

CRYOGENIC_DISTILLATION.recipeBuilder()
        .circuitMeta(3)
        .fluidInputs(fluid('untreated_liquid_nitrogen') * 75)
        .fluidInputs(fluid('liquid_air_feedstock') * 50)
        .fluidInputs(fluid('gaseous_air_feedstock') * 1100)
        .fluidOutputs(fluid('oxygen_rich_liquid') * 500)
        .fluidOutputs(fluid('nitrogen_rich_gas') * 2000)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

CRYOGENIC_DISTILLATION.recipeBuilder()
        .circuitMeta(3)
        .fluidInputs(fluid('subcooled_liquid_nitrogen') * 50)
        .fluidInputs(fluid('oxygen_rich_gas') * 50)
        .fluidInputs(fluid('oxygen_rich_vapor') * 400)
        .fluidInputs(fluid('nitrogen_rich_gas') * 1400)
        .fluidInputs(fluid('cold_gaseous_nitrogen') * 1000)
        .fluidInputs(fluid('crude_argon_vapor') * 10)
        .fluidInputs(fluid('oxygen_rich_liquid') * x)
        .fluidOutputs(fluid('untreated_liquid_nitrogen') * 175)
        .fluidOutputs(fluid('untreated_liquid_oxygen') * 200)
        .fluidOutputs(fluid('argon_rich_gas') * 100)
        .fluidOutputs(fluid('cold_waste_gaseous_nitrogen') * 100)
        .fluidOutputs(fluid('liquid_nitrogen') * 100)
        .duration(80)
        .EUt(160)
        .buildAndRegister()

CONDENSER.recipeBuilder()
        .fluidInputs(fluid('subcooled_oxygen_rich_liquid') * 200)
        .fluidInputs(fluid('crude_argon_vapor') * 40)
        .fluidOutputs(fluid('liquid_crude_argon') * 40)
        .fluidOutputs(fluid('oxygen_rich_vapor') * 200)
        .duration(80)
        .EUt(160)
        .buildAndRegister()